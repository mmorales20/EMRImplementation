package EMR;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class emrConvert {
	String newDoc;
	File inputFile;
    Boolean isTags;
	String[] all;
	List<String> item;
	ArrayList<String> fileB = new ArrayList<String>();
	
	
	public ArrayList<String> getFileB()
	{
		return fileB;
	}
	
	public boolean getIsUpload() {
		return isUpload;
	}

	public void setUpload(boolean isUpload) {
		this.isUpload = isUpload;
	}

	public boolean isUpload = false;

	public void uploadFile () throws FileNotFoundException {
		String contact, splitLine[], splitName[], splitAddress[], address, cell, birthGender, splitLine2[], status, substring, stats, history;
		int temp = 0;
		
		inputFile = new File("H:\\desktop\\FormatB.txt");
		@SuppressWarnings("resource")
		Scanner sc = new Scanner(inputFile);
		contact = sc.nextLine();
		
		// Getting first and last name from string
		splitLine = contact.split(","); 
		splitName = splitLine[0].split(" ");
		fileB.add(splitName[0]);
		fileB.add(splitName[1]);
		
		//address2
		contact = sc.nextLine();
		//System.out.println(contact);
		fileB.add(contact);
		
		
		address = sc.nextLine();
		splitLine = address.split(", "); 
		splitAddress = splitLine;
		
		fileB.add(splitAddress[0]);
		fileB.add(splitAddress[1]);
		fileB.add(splitAddress[2]);
		
		cell = sc.nextLine();
		splitLine = cell.split(": ");
		fileB.add(splitLine[1]);
		
		//blankLines
		contact = sc.nextLine();
		//contact = sc.nextLine();
		
		//birth, gender
		birthGender = sc.nextLine();
		splitLine = birthGender.split(" "); 
		splitName = splitLine;
		splitLine2 = splitName[1].split("	");
		fileB.add(splitLine2[0]);
		fileB.add(splitName[3]);
		
		contact = sc.nextLine();
		contact = sc.nextLine();
		
		//Marital, emp
		status = sc.nextLine();
		substring = status.substring(9,status.length());
		fileB.add(substring);
		
		status = sc.nextLine();
		substring = status.substring(10,status.length());
		fileB.add(substring);
		
		//Smoker 
		status = sc.nextLine();
		substring = status.substring(9,status.length());
		fileB.add(substring);
		
		//Alcohol
		stats = sc.nextLine();
		substring = stats.substring(10);
		fileB.add(substring);
		
		//DrugUse
		stats = sc.nextLine();
		substring = stats.substring(9);
		fileB.add(substring);
		
		//blank line
		contact = sc.nextLine();
		
		//height
		stats = sc.nextLine();
		substring = stats.substring(10);
		fileB.add(substring);
		
		//weight
		stats = sc.nextLine();
		substring = stats.substring(10);
		fileB.add(substring);
		
		//BP
		stats = sc.nextLine();
		substring = stats.substring(6);
		fileB.add(substring);
		
		//BMI
		stats = sc.nextLine();
		substring = stats.substring(7);
		fileB.add(substring);
		
		//empty line
		contact = sc.nextLine();
		contact = sc.nextLine();
		contact = sc.nextLine();
		
//		//Allergies
//		history = sc.nextLine();
//		//allergies[0] = substring;
//		splitLine = history.split("	");
//		//substring = history.substring(3);
//		fileB.add(splitLine[3]);
//		
		history = sc.nextLine();
		//System.out.println(history);
		while (!history.isEmpty()) { 
			splitLine = history.split("	");
			fileB.add(splitLine[3]);
			history = sc.nextLine();
			temp+=1;
			//System.out.println(temp);
			fileB.add(Integer.toString(temp));
		}
	
		while (sc.hasNextLine()) {
			newDoc = sc.nextLine();	
			fileB.add(newDoc);
			
		}
		
		for(int index=0; index<fileB.size(); index++ )
		{
			//System.out.println(fileB.get(index));
		}
		
		if(getFileExtension(inputFile).contains("txt")) {
			this.isTags = true;
			
		}
		else {
			this.isTags = false;
		}
		
		//System.out.println(getFileExtension(inputFile));
		//System.out.println(isTags);
		
		isUpload = true;
	}
	
	
	private static String getFileExtension(File file) {
        String fileName = file.getName();
        if(fileName.lastIndexOf(".") != -1 && fileName.lastIndexOf(".") != 0) {
        	
        	 return fileName.substring(fileName.lastIndexOf(".")+1);
        }
        else {
        	
        	return "";
        }
    }
	
	public void getFormat () throws FileNotFoundException {
		if(isTags == true) {
			BtoAFinalForm BA = new BtoAFinalForm(); 
			BA.getformatBA();
		}
		else {
			AtoBFinalForm AB = new AtoBFinalForm(); 
			AB.getformatAB();
			
		}
	}
	
	public static  void main(String[] args) throws FileNotFoundException  {
		emrConvert checkFormat = new emrConvert();
	    checkFormat.uploadFile();
		checkFormat.getFormat();
	}

	
	
}
