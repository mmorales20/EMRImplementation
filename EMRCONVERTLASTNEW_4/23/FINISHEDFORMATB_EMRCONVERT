package emr;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
//import java.util.List;
import java.util.Scanner;

public class emrConvert {
	String newDoc;
	File inputFile;
    Boolean isTags;
	String[] all;
	//List<String> item;
	ArrayList<String> fileB = new ArrayList<String>();
	
	
	public ArrayList<String> getFileB()
	{
		return fileB;
	}
	
	public boolean getIsUpload() {
		return isUpload;
	}

	public void setUpload(boolean isUpload) {
		this.isUpload = isUpload;
	}

	public boolean isUpload = false;

	public void uploadFile () throws FileNotFoundException {
		String contact, splitLine[], splitName[], splitAddress[], address, cell, birthGender, status, substring, stats, history;
		int temp = 0;
		int temp2 = 0;
		int temp3 = 0;
		int temp4 = 0;
		ArrayList<String> add = new ArrayList<String>();
		ArrayList<String> problem = new ArrayList<String>();
		ArrayList<String> social = new ArrayList<String>();
		
		inputFile = new File("/Users/trantruc/Desktop/formatB.txt");
		@SuppressWarnings("resource")
		Scanner sc = new Scanner(inputFile);
		contact = sc.nextLine();
		
		// Getting first and last name from string
		splitLine = contact.split(","); 
		splitName = splitLine[0].split(" ");
		fileB.add(splitName[0]);
		fileB.add(splitName[1]);
		
		//address2
		contact = sc.nextLine();
		//System.out.println(contact);
		fileB.add(contact);
		
		
		address = sc.nextLine();
		splitLine = address.split(", "); 
		splitAddress = splitLine;
		
		fileB.add(splitAddress[0]);
		fileB.add(splitAddress[1]);
		fileB.add(splitAddress[2]);
		
		cell = sc.nextLine();
		splitLine = cell.split(": ");
		fileB.add(splitLine[1]);
		
		//blankLines
		contact = sc.nextLine();
		contact = sc.nextLine();
	
		//birth, gender
		birthGender = sc.nextLine();
		splitLine = birthGender.split(" "); 
		fileB.add(splitLine[1]);
		substring = birthGender.substring(birthGender.length()-1);
		fileB.add(substring);
		
		contact = sc.nextLine();
		contact = sc.nextLine();
		
		//Marital, emp
		status = sc.nextLine();
		substring = status.substring(30,status.length());
		fileB.add(substring);

		
		status = sc.nextLine();
		substring = status.substring(24,status.length());
		fileB.add(substring);

		//Smoker 
		status = sc.nextLine();
		substring = status.substring(23,status.length());
		fileB.add(substring);

		
		//Alcohol
		stats = sc.nextLine();
		substring = stats.substring(24);
		fileB.add(substring);

		//DrugUse
		stats = sc.nextLine();
		substring = stats.substring(30);
		fileB.add(substring);
		
		
		//blank line
		contact = sc.nextLine();
		contact = sc.nextLine();
		
		
		//height
		stats = sc.nextLine();
		substring = stats.substring(31);
		fileB.add(substring);
		
		//weight
		stats = sc.nextLine();
		substring = stats.substring(31);
		fileB.add(substring);

		
		//BP
		stats = sc.nextLine();
		substring = stats.substring(27);
		fileB.add(substring);

		
		//BMI
		stats = sc.nextLine();
		substring = stats.substring(28);
		fileB.add(substring);

		
		//empty line
		contact = sc.nextLine();
		contact = sc.nextLine();
		contact = sc.nextLine();
		contact = sc.nextLine();
		
		
		//allergies
		history = sc.nextLine();
		while (!history.isEmpty()) { 
			substring = history.substring(24,34);
			fileB.add(substring);
			//System.out.println(substring);
			history = sc.nextLine();
			temp+=1;
			fileB.add(Integer.toString(temp));
		}
		
		//empty line
		contact = sc.nextLine();
		contact = sc.nextLine();
		history = sc.nextLine();
		
		//medicines
		while (!history.isEmpty()) { 
			substring = history.substring(24);
			add.add(substring);			
			temp2+=1;
			history = sc.nextLine();	
		}
		String string = "";

		for (String s : add)
		{
		    string += "              "+ s + "\n";
		}
		//System.out.println(string);
		fileB.add(string);
		fileB.add(Integer.toString(temp2-1));
		
		//empty Lines
		for(int index = 0; index <11; index++) {
			contact = sc.nextLine();
		}
		
		//Problem List
		history = sc.nextLine();
		
		while (!history.isEmpty()) { 
			substring = history.substring(24);
			problem.add(substring);			
			temp3+=1;
			history = sc.nextLine();	
		}
		String string2 = "";

		for (String s : problem)
		{
		    string2 += "              "+ s + "\n";
		}
		//System.out.println(string2);
		fileB.add(string2);
		fileB.add(Integer.toString(temp3));
		
		//Empty Lines
		for(int index = 0; index <9; index++) {
			contact = sc.nextLine();
		}
	
		//History
		history= sc.nextLine();
		
		while (!history.isEmpty()) { 
			substring = history.substring(8);
			social.add(substring);			
			temp4+=1;
			history = sc.nextLine();	
			
		}
		String string3 = "";

		for (String s : social)
		{
		    string3 += "		"+ s + "\n";
		}
		//System.out.println(string3);
		fileB.add(string3);
		fileB.add(Integer.toString(temp4-3));
		
		
		
		while (sc.hasNextLine()) {
			newDoc = sc.nextLine();	
			fileB.add(newDoc);
			
		}
		
		for(int index=0; index<fileB.size(); index++ )
		{
			//System.out.println(fileB.get(index));
		}
		
		if(getFileExtension(inputFile).contains("formatB")) {
			this.isTags = true;
			
		}
		else {
			this.isTags = false;
		}
		
		//System.out.println(getFileExtension(inputFile));
		//System.out.println(isTags);
		
		isUpload = true;
	}
	
	
	private static String getFileExtension(File file) {
        String fileName = file.getName();
        if(fileName.lastIndexOf(".") != -1 && fileName.lastIndexOf(".") != 0) {
        	
        	 return fileName.substring(fileName.lastIndexOf(".")-7);
        }
        else {
        	
        	return "";
        }
    }
	
	public void getFormat () throws FileNotFoundException {
		if(isTags == true) {
			BtoAFinalForm BA = new BtoAFinalForm(); 
			BA.getformatBA();
		}
		else {
			AtoBFInalForm AB = new AtoBFInalForm(); 
			AB.getformatAB();
			
		}
	}
	
	public static  void main(String[] args) throws FileNotFoundException  {
		emrConvert checkFormat = new emrConvert();
	    checkFormat.uploadFile();
		checkFormat.getFormat();
	}

	
	
}
