package EMR;

import static org.junit.Assert.*;

import java.io.FileNotFoundException;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;


public class testSuite {
	
	contactInfo testString;
	personalInfo testPersonalString;
	patientStats testStatString;
	patientStats testStatDouble;
	emrConvert converter;
	
	@Before
	public void setUp() {
		testString = new contactInfo();
		testPersonalString = new personalInfo();
		testStatString = new patientStats(); 
		testStatDouble = new patientStats();
		converter = new emrConvert();
	}
	
	//test contactInfo
	
	@Test
	public void testFirstName() {
		testString.setFirstName("Sally");
		assertEquals("Sally", testString.getFirstName());
	}
	
	@Test
	public void testFirstNameFalse() {
		testString.setFirstName("Sally");
		assertNotEquals("Sallly", testString.getFirstName());
	}
	
	@Test
	public void testLastName() {
		testString.setLastName("Hansen");
		assertEquals("Hansen", testString.getLastName());
	}
	
	@Test
	public void testLastNameFalse() {
		testString.setLastName("Hansen");
		assertNotEquals("Handsen", testString.getFirstName());
	}
	
	@Test
	public void testStreetAddress1() {
		testString.setStreetAddress1("1234 Coffee Ave");
		assertEquals("1234 Coffee Ave", testString.getStreetAddress1());
	}
	
	@Test
	public void testStreetAddress1False() {
		testString.setStreetAddress1("1234 Coffee Ave");
		assertNotEquals("1224 Coffee Ave", testString.getStreetAddress1());
	}

	@Test
	public void testCity() {
		testString.setCity("Chocolate");
		assertEquals("Chocolate", testString.getCity());
	}
	
	@Test
	public void testCityFalse() {
		testString.setCity("Chocolate");
		assertNotEquals("Cacao", testString.getCity());
	}
	
	@Test
	public void testState() {
		testString.setState("California");
		assertEquals("California", testString.getState());
	}
	
	@Test
	public void testStateFalse() {
		testString.setState("California");
		assertNotEquals("Cali", testString.getState());
	}
	
	@Test
	public void testZipCode() {
		testString.setZipCode("12345");
		assertEquals("12345", testString.getZipCode());
	}
	
	@Test
	public void testZipCodeFalse() {
		testString.setZipCode("12345");
		assertNotEquals("12346", testString.getZipCode());
	}
	
	@Test
	public void testEmail() {
		testString.setEmail("shansen20@jcu.edu");
		assertEquals("shansen20@jcu.edu", testString.getEmail());
	}
	
	@Test
	public void testEmailFalse() {
		testString.setEmail("shansen20@jcu.edu");
		assertNotEquals("shansen20@edu", testString.getEmail());
	}
	
	
	@Test
	public void testPhoneNumber() {
		testString.setPhoneNumber("123-123-1234");
		assertEquals("123-123-1234", testString.getPhoneNumber());
	}
	
	@Test
	public void testPhoneNumberFalse() {
		testString.setPhoneNumber("123-123-1234");
		assertNotEquals("123-123-4321", testString.getPhoneNumber());
	}
	
	//start of personalInfo
	
	@Test
	public void testDateOfBirth() {
		testPersonalString.setDateOfBirth("12/25/2000");
		assertEquals("12/25/2000", testPersonalString.getDateOfBirth());
	}
	
	@Test
	public void testGender() {
		testPersonalString.setGender("Female");
		assertEquals("Female", testPersonalString.getGender());
	}
	
	@Test
	public void testMaritalStatus() {
		testPersonalString.setMaritalStatus("Married");
		assertEquals("Married", testPersonalString.getMaritalStatus());
	}
	
	@Test
	public void testRace() {
		testPersonalString.setRace("Caucasian");
		assertEquals("Caucasian", testPersonalString.getRace());
	}
	
	@Test
	public void testEmpStatus() {
		testPersonalString.setEmpStatus("Employed");
		assertEquals("Employed", testPersonalString.getEmpStatus());
	}
	
	@Test
	public void testSocialSecurity() {
		testPersonalString.setSocialSecurity("123-456-7890");
		assertEquals("123-456-7890", testPersonalString.getSocialSecurity());
	}
	
	@Test
	public void testContactPref() {
		testPersonalString.setContactPref("phone");
		assertEquals("phone", testPersonalString.getContactPref());
	}
	
	@Test
	public void testLanguage() {
		testPersonalString.setLanguage("English");
		assertEquals("English", testPersonalString.getLanguage());
	}
	
	@Test
	public void testFolderStatus() {
		testStatString.setFolderStatus("exist");
		assertEquals("exist", testStatString.getFolderStatus());
	}
	
	@Test
	public void testPatientID() {
		testStatString.setPatientID("0000-11111");
		assertEquals("0000-11111", testStatString.getPatientID());
	}
	
	@Test
	public void testHeight() {
		testStatString.setHeight(64.0);
		assertEquals(64.0, testStatDouble.getHeight(), 64.0);
	}
	
	@Test
	public void testWeight() {
		testStatString.setWeight(140.0);
		assertEquals(140.0, testStatDouble.getWeight(), 140.0);
	}
	
	@Test
	public void testBp() {
		testStatString.setBp("158/90");
		assertEquals("158/90", testStatString.getBp());
	}
	
	@Test
	public void testBMI() {
		testStatString.setBMI(25.2);
		assertEquals(25.2, testStatDouble.getBMI(), 64.0);
	}
	
	@Test
	public void testSmoker() {
		testStatString.setSmoker("frequent");
		assertEquals("frequent", testStatString.getSmoker());
	}
	
	@Test
	public void testAlcohol() {
		testStatString.setAlcohol("0.00");
		assertEquals("0.00", testStatString.getAlcohol());
	}
	
	@Test
	public void testDrugUse() {
		testStatString.setDrugUse("never");
		assertEquals("never", testStatString.getDrugUse());
	}
	
	@Test
	public void testUploadSuccessful() throws FileNotFoundException {
		converter.uploadFile();
		
		assertTrue(converter.getIsUpload());
	}
	
	@Test
	public void testFirstLine() throws FileNotFoundException {
		converter.readFile();
		assertTrue(converter.getIsRead());
		
	}
	

}
